<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器-->
    <context:component-scan base-package="egox.sm.controller" />
    
    <!-- 默认的注解映射的支持 --> 
    <!-- <mvc:annotation-driven />，简写，自动注册 DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter, 不建议使用，建议显示的注册 -->
    
    <!-- 处理在类级别上的@RequestMapping注解 ，order=0-->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
<!--                 多个拦截器,顺序执行 
                <ref bean="SpringMVCInterceptor" />
                <ref bean="OpenSessionInViewInterceptor"/>-->
            </list>
        </property>
    </bean>
    
    <!-- 处理方法级别上的@RequestMapping注解 -->
    <bean id="annotationMethodHandlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- json转换器 开始 -->
                <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
<!--                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <constructor-arg> 
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                            <property name="streamDriver" >
                                <bean class="com.thoughtworks.xstream.io.xml.DomDriver"/>
                            </property>
                            
                            <property name="autodetectAnnotations" >
                                <value>true</value>
                            </property>
                            可以与xml互换的对象，需要使用XStream的注解，注解的使用方法请参XStream官网
                            <property name="annotatedClasses">
                                <list>
                                    <value>com.xxx.XxxxDTO</value>
                                </list>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>  -->
<!--                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>-->
                <!--
                <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                -->
                <!-- json转换器 结束-->
            </list>
        </property>
    </bean>
    
    
    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->  
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>  
                                <entry key="xml" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        
<!--        <property name="viewResolvers">  
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                
                 可加入其他视图技术如 volacity jstl等    
            </list>  
        </property>  -->
        <property name="defaultViews">  
            <list>  
                <!-- for application/json -->  
                <bean class="egox.ext.fastjson.FastJsonJsonView" />
                <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView" />-->
                
                <!-- for application/xml -->  
               <bean class="org.springframework.web.servlet.view.xml.MarshallingView" >  
                   <property name="marshaller">  
                       <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>  
                   </property>  
               </bean>  
                  
            </list>  
        </property>  
    </bean> 
    
    
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="1" />
    </bean>
    

    <!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
        <property name="maxUploadSize">
            <value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>
    
    <!-- 定义无Controller的path<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:/welcome"/>
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <!-- order=2147483646 -->
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926" />
    
    <!-- order=2147483647 -->
    <mvc:default-servlet-handler/>
    
    <!--    spring-mvc可在xxx-serverlet.xml里定义default和 按Excepiton类型影射的错误页面, 和Servlet规范比,主要作了Spring特色的JSP路径转向和日志记录
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.access.AccessDeniedException">error/access-denied</prop>
                <prop key="net.yingzhuo.me.exception.NonEmptyGroupException">error/non-empty-group</prop>
            </props>
        </property>
        <property name="warnLogCategory" value="Warning Information:" />
        <property name="defaultErrorView" value="common/error" />
        <property name="defaultStatusCode" value="500" />
    </bean>-->
    
    
    
    <!-- Imports user-defined @Controller beans that process client requests -->
    <!--<import resource="controllers.xml" />-->

   
</beans>